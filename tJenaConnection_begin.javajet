<%@ jet 
imports="
    	org.talend.core.model.process.INode    
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser 
		java.util.List
		java.util.Map
		" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
	String host = "";
	String port = "";
	String dataset = ElementParameterParser.getValue(node, "__DATASET__");
	String update = ElementParameterParser.getValue(node, "__UPDATE__");
	String query = ElementParameterParser.getValue(node, "__QUERY__");
	String user = ElementParameterParser.getValue(node, "__USER__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");
	String defaultGraph="";
	Boolean logging = new Boolean(ElementParameterParser.getValue(node, "__LOGGING__"));
	java.util.List<Map<String, String>> prefixValues = null;
	
	if("FUSEKI".equals(connection)){
		host=ElementParameterParser.getValue(node, "__HOST_FUSEKI__");
		port=ElementParameterParser.getValue(node, "__PORT_FUSEKI__");
		defaultGraph=ElementParameterParser.getValue(node, "__DEFAULT_GRAPH_FUSEKI__");
		prefixValues=(java.util.List<java.util.Map<String,String>>)
								ElementParameterParser.getObjectValue(
        							node,"__PREFIXES_FUSEKI__");
	}else{
		host=ElementParameterParser.getValue(node, "__HOST_VIRTUOSO__");
		port=ElementParameterParser.getValue(node, "__PORT_VIRTUOSO__");
		defaultGraph=ElementParameterParser.getValue(node, "__DEFAULT_GRAPH_VIRTUOSO__");
		prefixValues=(java.util.List<java.util.Map<String,String>>)
								ElementParameterParser.getObjectValue(
        							node,"__PREFIXES_VIRTUOSO__");
	}
	
	defaultGraph = defaultGraph.replaceAll("(^\"<?)|(\\>?\"$)","\"");
	%>
	java.util.Map<String, String> prefixMap_<%=cid%> = new java.util.HashMap<String,String>();
	<%if(prefixValues !=null) {
		for(java.util.Map<String, String> map : prefixValues){%>
			prefixMap_<%=cid%>.put(<%=map.get("PREFIX")%>,
									<%=map.get("NAMESPACE")%>);
		<%}
	}%>
	de.crawling.spider.talend.components.jena.connection.IConnector connector_<%=cid%> = 
									new de.crawling.spider.talend.components.jena.connection.ConnectorImpl();
	connector_<%=cid%>.setHost(<%=host%>);
	connector_<%=cid%>.setPort(<%=port%>);
	connector_<%=cid%>.setDataset(<%=dataset%>);
	connector_<%=cid%>.setUpdateUrlAdditional(<%=update%>);
	connector_<%=cid%>.setQueryUrlAdditional(<%=query%>);
	connector_<%=cid%>.setUser(<%=user%>);
	connector_<%=cid%>.setPassword(<%=password%>);
	connector_<%=cid%>.setPrefixMapping(prefixMap_<%=cid%>);
	de.crawling.spider.talend.components.jena.connection.IConnection connection_<%=cid%> = null;
	<%if(defaultGraph!=null && !"".equals(defaultGraph)){%>
		connector_<%=cid%>.setDefaultGraph(<%=defaultGraph%>);
	<%}
	if("FUSEKI".equals(connection)){%>
		connection_<%=cid%> = new de.crawling.spider.talend.components.jena.connection.
							FusekiConnection();
	<%}else{%>
		connection_<%=cid%> = new de.crawling.spider.talend.components.jena.connection.
							VirtuosoConnection();
	<%}%>
	connection_<%=cid%>.addLogger("<%=cid%>", <%=logging%>);
	connection_<%=cid%>.setLogging(<%=logging%>,"<%=cid%>");
	connection_<%=cid%>.createConnection(connector_<%=cid%>, "<%=cid%>");
	globalMap.put("connection_<%=cid%>",connection_<%=cid%>);
	